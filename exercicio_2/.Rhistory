x <- c(0, rlnorm(50))
all.equal(dweibull(x, shape = 1), dexp(x))
x <- c(0, rlnorm(50))
qweibull(x, shape=0.75, scale=1)
x <- c(0, rlnorm(50))
qweibull(x, shape=0.75, scale=1)
# create some sample data
x <- rlnorm(100)
# estimate paramters
library(MASS)
fitdistr(x, "weibull")
# create some sample data
x <- rlnorm(100)
# estimate paramters
library(MASS)
fitdistr(x, "weibull")
# create some sample data
x <- rlnorm(100)
# estimate paramters
library(MASS)
fitdistr(x, "weibull")
# create some sample data
x <- rlnorm(100)
# estimate paramters
library(MASS)
fitdistr(x, "weibull")
x <- rweibull(100, 1, 1)
x <- rweibull(100, 1, 1)
hist(x,main="Histogram of Weibull distribution")
plot(density(x),main="Density estimate of data")
hist(x,main="Histogram of Weibull distribution")
curve(x,from=0,    to=15,    main="Weibull distribution"))
curve(x,from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 1),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 1),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 1.5),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 2.5),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 3),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 3),from=0,to=100,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 2.5),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 1.5),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 2.5),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 5),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 5),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 5),from=0,to=15,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 1),from=0,to=2.5,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 1.5),from=0,to=2.5,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 5),from=0,to=2.5,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 1),from=0,to=2.5,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 0.5),from=0,to=2.5,main="Weibull distribution")
curve(dweibull(x, scale = 1, shape = 0.5),from=0,to=2.5,main="Beta menor do que 1")
curve(dweibull(x, scale = 1, shape = 1.5),from=0,to=2.5,main="Beta entre 1 e 2")
curve(dweibull(x, scale = 1, shape = 5),from=0,to=2.5,main="Beta maior do que 2")
curve(dweibull(x, scale = 1, shape = 1.5),from=0,to=2.5,main="Beta entre 1 e 2")
curve(dweibull(x, scale = 1, shape = 0.5),from=0,to=2.5,main="Beta menor do que 1")
scores->load("/Users/raphaelalbino/Dropbox/doutorado/EAD5917/exercicio 1/exercicio")
scores->read.csv2("/Users/raphaelalbino/Dropbox/doutorado/EAD5917/exercicio 1/Escores.csv")
scores<-read.csv2("/Users/raphaelalbino/Dropbox/doutorado/EAD5917/exercicio 1/Escores.csv")
table(scores$Graduacao)
table(scores$Anos_de_Experiencia,scores$Graduacao)
anos_graduacao<-table(scores$Anos_de_Experiencia,scores$Graduacao)
barplot(anos_graduacao, main="Graduados por ano de experiência",
xlab="Número de funcionários", col=c("darkblue","red"),
legend = rownames(anos_graduacao), beside=TRUE)
anos_graduacao<-table(scores$Graduacao,scores$Anos_de_Experiencia)
barplot(anos_graduacao, main="Graduados por ano de experiência",
xlab="Número de funcionários", col=c("darkblue","red"),
legend = rownames(anos_graduacao), beside=TRUE)
barplot(anos_graduacao, main="Graduados por ano de experiencia",
xlab="Numero de funcionarios", col=c("darkblue","red"),
legend = rownames(anos_graduacao), beside=TRUE)
View(scores)
View(scores)
barplot(anos_graduacao, main="Graduados por ano de experiencia",
xlab="Numero de funcionarios", col=c("red","darkblue"),
legend = rownames(anos_graduacao), beside=TRUE)
barplot(anos_graduacao, main="Graduados por ano de experiencia",
xlab="Numero de funcionarios", col=c("red","darkblue"),
legend = rownames(anos_graduacao))
barplot(anos_graduacao, main="Graduados por ano de experiencia",
xlab="Numero de funcionarios", col=c("red","darkblue"),
legend = rownames(anos_graduacao),beside=TRUE)
summary(scores$ Anos_de_Experiencia)
mode(scores$ Anos_de_Experiencia)
mode(scores$ Anos_de_Experiencia)[0]
mode(scores$ Anos_de_Experiencia)[1]
mode<-mode(scores$ Anos_de_Experiencia)
mode[0]
boxplot(scores$Anos_de_Experiencia)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
mode<-getmode(scores$Anos_de_Experiencia)
summary(scores$Escore_teste)
summary(scores$Salario)
boxplot(scores$Salario)
hist(scores$Salario,  ylab="Frequencia",main="Histograma de salario", xlab="Salario")
table(scores$Salario)
table(scores$Salario)
sd(scores$Salario)
desvio_padrao_salario<-sd(scores$Salario)
cv_salario<-mean(scores$Salario)/devio_padrao_salario
cv_salario<-mean(scores$Salario)/desvio_padrao_salario
cv_salario*100
desvio_padrao_salario<-sd(scores$Salario)
cv_salario<-desvio_padrao_salario/mean(scores$Salario)
anos_salario<-table(scores$Salario,scores$Anos_de_Experiencia)
barplot(anos_salario, main="Salario por ano de experiencia",
xlab="Numero de funcionarios", col=c("darkblue"),
legend = rownames(anos_graduacao),beside=TRUE)
barplot(anos_salario, main="Salario por ano de experiencia",
xlab="Numero de funcionarios", col=c("darkblue"),
legend = rownames(anos_salario),beside=TRUE)
barplot(anos_salario, main="Salario por ano de experiencia",
xlab="Numero de funcionarios",beside=TRUE)
anos_salario<-table(scores$Salario,scores$Anos_de_Experiencia)
table(scores$Salario,scores$Anos_de_Experiencia)
cor(scores[-3])
setwd("/Users/raphaelalbino/Dropbox/doutorado/EAD5917/exercicio_2/")
dados_fabrica <- read.csv2("fabricachocolate.csv")
summary(dados_fabrica)
View(dados_fabrica)
View(dados_fabrica)
summary(dados_fabrica$Ci)
dados_fabrica$Ci_residuo = (dados_fabrica$Ci - mean(dados_fabrica$Ci))*(dados_fabrica$Ci - mean(dados_fabrica$Ci))
sum(dados_fabrica$Ci_residuo)
par(mfrow=c(1,2))
plot(producao_fabrica, custo_indireto, type="n", xlab="Producaoo da fabrica",ylab="Custos indiretos")
points(producao_fabrica, custo_indireto, pch=19)
plot(embalagens, custo_indireto, type="n", xlab="Producao de embalagens",ylab="Custos indiretos")
points(embalagens, custo_indireto, pch=19)
custo_indireto <- dados_fabrica$Ci
producao_fabrica <- dados_fabrica$Ton
embalagens <- dados_fabrica$Emb
ferias <- factor(dados_fabrica$ferias)
ano_2008 <- factor(dados_fabrica$Ano2008)
ano_2007 <- factor(dados_fabrica$Ano2007)
par(mfrow=c(1,2))
plot(producao_fabrica, custo_indireto, type="n", xlab="Producaoo da fabrica",ylab="Custos indiretos")
points(producao_fabrica, custo_indireto, pch=19)
plot(embalagens, custo_indireto, type="n", xlab="Producao de embalagens",ylab="Custos indiretos")
points(embalagens, custo_indireto, pch=19)
par(mfrow=c(1,2))
plot(producao_fabrica, custo_indireto, type="n", xlab="Producao da fabrica",ylab="Custos indiretos")
points(producao_fabrica, custo_indireto, pch=19)
plot(embalagens, custo_indireto, type="n", xlab="Producao de embalagens",ylab="Custos indiretos")
points(embalagens, custo_indireto, pch=19)
equacao <- lm(custo_indireto~producao_fabrica+embalagens)
summary(equacao)
anova(equacao)
confint(equacao)
abline(h=0)
qqnorm(residuals(equacao), ylab="Res??duos")
qqline(residuals(equacao))
abline(h=0)
qqnorm(residuals(equacao), ylab="Residuos")
qqline(residuals(equacao))
abline(h=0)
qqnorm(residuals(equacao), ylab="Residuos")
qqline(residuals(equacao))
median(embalagens)
median(producao_fabrica)
var.test(residuals(equacao)[embalagens<=2074],residuals(equacao)
[embalagens>=2074])
var.test(residuals(equacao)[producao_fabrica<=50.5],residuals(equacao)
[producao_fabrica>=50.5])
var.test(residuals(equacao)[embalagens<=2074],residuals(equacao)
[embalagens>=2074])
var.test(residuals(equacao)[producao_fabrica<=50.5],residuals(equacao)
[producao_fabrica>=50.5])
equacao_nova <- lm(custo_indireto~producao_fabrica+embalagens+ferias+ano_2007+ano_2008)
summary(equacao_nova)
vif(equacao_nova)
sqrt(vif(equacao_nova)) > 2
library("faraway", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
vif(equacao_nova)
sqrt(vif(equacao_nova)) > 2
cor(dados_fabrica)
cor(dados_fabrica)
dados_fabrica
cor(dados_fabrica[2:8])
